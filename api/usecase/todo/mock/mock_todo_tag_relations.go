// Code generated by MockGen. DO NOT EDIT.
// Source: todo_tag_relations_repository.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	sql "database/sql"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTodoTagRelationsRepository is a mock of TodoTagRelationsRepository interface.
type MockTodoTagRelationsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTodoTagRelationsRepositoryMockRecorder
}

// MockTodoTagRelationsRepositoryMockRecorder is the mock recorder for MockTodoTagRelationsRepository.
type MockTodoTagRelationsRepositoryMockRecorder struct {
	mock *MockTodoTagRelationsRepository
}

// NewMockTodoTagRelationsRepository creates a new mock instance.
func NewMockTodoTagRelationsRepository(ctrl *gomock.Controller) *MockTodoTagRelationsRepository {
	mock := &MockTodoTagRelationsRepository{ctrl: ctrl}
	mock.recorder = &MockTodoTagRelationsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTodoTagRelationsRepository) EXPECT() *MockTodoTagRelationsRepositoryMockRecorder {
	return m.recorder
}

// TransOverwrite mocks base method.
func (m *MockTodoTagRelationsRepository) TransOverwrite(arg0 *sql.Tx, arg1 int, arg2 []int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransOverwrite", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// TransOverwrite indicates an expected call of TransOverwrite.
func (mr *MockTodoTagRelationsRepositoryMockRecorder) TransOverwrite(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransOverwrite", reflect.TypeOf((*MockTodoTagRelationsRepository)(nil).TransOverwrite), arg0, arg1, arg2)
}

// TransStore mocks base method.
func (m *MockTodoTagRelationsRepository) TransStore(arg0 *sql.Tx, arg1 int64, arg2 []int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransStore", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// TransStore indicates an expected call of TransStore.
func (mr *MockTodoTagRelationsRepositoryMockRecorder) TransStore(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransStore", reflect.TypeOf((*MockTodoTagRelationsRepository)(nil).TransStore), arg0, arg1, arg2)
}
